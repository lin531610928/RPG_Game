<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moe.dao.FriendsMapper">
  <resultMap id="BaseResultMap" type="com.moe.model.Friends">
    <result column="Player_id" jdbcType="INTEGER" property="player_id" />
    <result column="Friend_id" jdbcType="INTEGER" property="friend_id" />
    <result column="Friend_state" jdbcType="INTEGER" property="friend_state" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.moe.model.MyFriends">
    <result column="Player_id" jdbcType="INTEGER" property="player_id" />
    <result column="Friend_id" jdbcType="INTEGER" property="friend_id" />
    <result column="Friend_state" jdbcType="INTEGER" property="friend_state" />
    <result column="Player_name" jdbcType="VARCHAR" property="player_name" />
    <result column="Player_level" jdbcType="INTEGER" property="player_level" />
  </resultMap>
  <sql id="Base_Column_List">
    Player_id, Friend_id, Friend_state
  </sql>
  <select id="selectByPFid" parameterType="com.moe.model.Friends" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from Friends
    where Player_id = #{player_id,jdbcType=INTEGER} and Friend_id = #{friend_id,jdbcType=INTEGER}
  </select>
  <select id="selectByMyFriends" parameterType="com.moe.model.Friends" resultMap="BaseResultMap2">
    select
    a.Player_id, a.Friend_id, a.Friend_state, b.Player_name, b.Player_level
    from Friends a,Players b
    where a.Player_id = #{player_id,jdbcType=INTEGER} and a.Friend_id = b.Player_id and a.Friend_state = #{friend_state,jdbcType=INTEGER}
  </select>
  <select id="selectWaitAgree" parameterType="com.moe.model.Friends" resultMap="BaseResultMap2">
    select
    a.Player_id, a.Friend_id, a.Friend_state, b.Player_name, b.Player_level
    from Friends a,Players b
    where a.Friend_id = #{friend_id,jdbcType=INTEGER} and a.Player_id = b.Player_id and a.Friend_state = #{friend_state,jdbcType=INTEGER}
  </select>
  <update id="updateByPlayerid" parameterType="com.moe.model.Friends">
    update Friends
    <set>
      <if test="friend_id != null">
        Friend_id = #{friend_id,jdbcType=INTEGER},
      </if>
      <if test="friend_state != null">
        Friend_state = #{friend_state,jdbcType=INTEGER},
      </if>
    </set>
    where Player_id = #{player_id,jdbcType=INTEGER} and Friend_id = #{friend_id,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.moe.model.Friends">
    insert into Friends (Player_id, Friend_id, Friend_state
      )
    values (#{player_id,jdbcType=INTEGER}, #{friend_id,jdbcType=INTEGER}, #{friend_state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.moe.model.Friends">
    insert into Friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="player_id != null">
        Player_id,
      </if>
      <if test="friend_id != null">
        Friend_id,
      </if>
      <if test="friend_state != null">
        Friend_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="player_id != null">
        #{player_id,jdbcType=INTEGER},
      </if>
      <if test="friend_id != null">
        #{friend_id,jdbcType=INTEGER},
      </if>
      <if test="friend_state != null">
        #{friend_state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <delete id="deleteFriend" parameterType="com.moe.model.Friends">
    delete from Friends
    where Player_id = #{player_id,jdbcType=INTEGER} and Friend_id = #{friend_id,jdbcType=INTEGER}
  </delete>
</mapper>